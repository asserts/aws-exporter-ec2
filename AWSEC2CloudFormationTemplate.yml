AWSTemplateFormatVersion: 2010-09-09
Description: >-
  AWS CloudFormation Sample Template vpc_single_instance_in_subnet.template:
  Sample template showing how to create a VPC and add an EC2 instance with an
  Elastic IP address and a security group. *WARNING* This template creates an
  Amazon EC2 instance. You will be billed for the AWS resources used if you
  create a stack from this template.
Parameters:
  InstanceType:
    Description: WebServer EC2 instance type
    Type: String
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: String
    MinLength: '1'
    MaxLength: '255'
    AllowedPattern: '[\x20-\x7E]*'
    ConstraintDescription: can contain only ASCII characters.
  VpcID:
    Description: The Network to the EC2 instances
    Type: String
  Image:
    Description: The Network to the EC2 instances
    Type: String
  Subnet:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
  Disksize:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
  SG:
    Description: The SG IDs of the EC2 instance
    Type: CommaDelimitedList
  SSHLocation:
    Description: ' The IP address range that can be used to SSH to the EC2 instances'
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
  AvailabilityZone:
    Description: The AZ of the EC2 instance
    Type: String
Resources:
  Instance:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      SubnetId: !Ref Subnet
      SecurityGroupIds: !Ref SG
      ImageId: !Ref Image
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: !Ref Disksize
      AvailabilityZone: !Ref AvailabilityZone
      IamInstanceProfile: !Ref assertsAWSExporterInstanceProfile
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 7b34ff0a-6d1f-4473-a541-5f43d417ebcc
  IAMROLE:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: asserts-aws-exporter-role
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
    Metadata:
      'AWS::CloudFormation::Designer':
        id: bfb20f94-9254-4116-9887-4ca0c4fa8eed
  assertsAWSExporterInstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Path: /
      InstanceProfileName: asserts-aws-exporter-role
      Roles:
        - !Ref IAMROLE
    Metadata:
      'AWS::CloudFormation::Designer':
        id: b01afd3f-4079-4947-9d34-7a9957dad099
  IAMPOLICY:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: asserts-aws-exporter-policy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: VisualEditor0
            Effect: Allow
            Action:
              - 'autoscaling:DescribeLoadBalancers'
              - 'autoscaling:DescribeLoadBalancerTargetGroups'
              - 'autoscaling:DescribeAutoScalingGroups'
              - 'config:Get*'
              - 'config:Describe*'
              - 'config:List*'
              - 'cloudwatch:GetMetricData'
              - 'cloudwatch:ListMetrics'
              - 'ecs:DescribeContainerInstances'
              - 'ecs:DescribeServices'
              - 'ecs:DescribeTaskDefinition'
              - 'ecs:DescribeTasks'
              - 'ecs:ListAccountSettings'
              - 'ecs:ListClusters'
              - 'ecs:ListContainerInstances'
              - 'ecs:ListServices'
              - 'ecs:ListTaskDefinitionFamilies'
              - 'ecs:ListTaskDefinitions'
              - 'ecs:ListTasks'
              - 'lambda:GetAccountSettings'
              - 'lambda:GetFunctionConcurrency'
              - 'lambda:GetProvisionedConcurrencyConfig'
              - 'lambda:ListAliases'
              - 'lambda:ListEventSourceMappings'
              - 'lambda:ListFunctionEventInvokeConfigs'
              - 'lambda:ListFunctions'
              - 'lambda:ListProvisionedConcurrencyConfigs'
              - 'lambda:ListVersionsByFunction'
              - 'logs:FilterLogEvents'
              - 's3:DescribeJob'
              - 's3:DescribeMultiRegionAccessPointOperation'
              - 's3:GetAccelerateConfiguration'
              - 's3:GetAccessPoint'
              - 's3:GetAccessPointConfigurationForObjectLambda'
              - 's3:GetAccessPointForObjectLambda'
              - 's3:GetAccessPointPolicy'
              - 's3:GetAccessPointPolicyForObjectLambda'
              - 's3:GetAccessPointPolicyStatus'
              - 's3:GetAccessPointPolicyStatusForObjectLambda'
              - 's3:GetAccountPublicAccessBlock'
              - 's3:GetAnalyticsConfiguration'
              - 's3:GetBucketAcl'
              - 's3:GetBucketCORS'
              - 's3:GetBucketLocation'
              - 's3:GetBucketLogging'
              - 's3:GetBucketNotification'
              - 's3:GetBucketObjectLockConfiguration'
              - 's3:GetBucketOwnershipControls'
              - 's3:GetBucketPolicy'
              - 's3:GetBucketPolicyStatus'
              - 's3:GetBucketPublicAccessBlock'
              - 's3:GetBucketRequestPayment'
              - 's3:GetBucketTagging'
              - 's3:GetBucketVersioning'
              - 's3:GetBucketWebsite'
              - 's3:GetEncryptionConfiguration'
              - 's3:GetIntelligentTieringConfiguration'
              - 's3:GetInventoryConfiguration'
              - 's3:GetJobTagging'
              - 's3:GetLifecycleConfiguration'
              - 's3:GetMetricsConfiguration'
              - 's3:GetMultiRegionAccessPoint'
              - 's3:GetMultiRegionAccessPointPolicy'
              - 's3:GetMultiRegionAccessPointPolicyStatus'
              - 's3:GetObject'
              - 's3:GetObjectAcl'
              - 's3:GetObjectLegalHold'
              - 's3:GetObjectRetention'
              - 's3:GetObjectTagging'
              - 's3:GetObjectTorrent'
              - 's3:GetObjectVersion'
              - 's3:GetObjectVersionAcl'
              - 's3:GetObjectVersionForReplication'
              - 's3:GetObjectVersionTagging'
              - 's3:GetObjectVersionTorrent'
              - 's3:GetReplicationConfiguration'
              - 's3:GetStorageLensConfiguration'
              - 's3:GetStorageLensConfigurationTagging'
              - 's3:GetStorageLensDashboard'
              - 's3:ListBucket'
              - 'tag:GetResources'
            Resource: '*'
      Roles:
        - !Ref IAMROLE
    Metadata:
      'AWS::CloudFormation::Designer':
        id: e977f0cc-ac09-4783-83e9-9db6ed85cfa9
Metadata:
  'AWS::CloudFormation::Designer':
    bfb20f94-9254-4116-9887-4ca0c4fa8eed:
      size:
        width: 60
        height: 60
      position:
        x: 60
        'y': 90
      z: 1
      embeds: []
    e977f0cc-ac09-4783-83e9-9db6ed85cfa9:
      size:
        width: 60
        height: 60
      position:
        x: 180
        'y': 90
      z: 1
      embeds: []
      isassociatedwith:
        - bfb20f94-9254-4116-9887-4ca0c4fa8eed
    b01afd3f-4079-4947-9d34-7a9957dad099:
      size:
        width: 60
        height: 60
      position:
        x: -40
        'y': 180
      z: 1
      embeds: []
      isassociatedwith:
        - bfb20f94-9254-4116-9887-4ca0c4fa8eed
    7b34ff0a-6d1f-4473-a541-5f43d417ebcc:
      size:
        width: 60
        height: 60
      position:
        x: 300
        'y': 90
      z: 1
      embeds: []
